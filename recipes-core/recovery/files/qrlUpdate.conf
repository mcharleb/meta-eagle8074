#!/bin/sh
# Copyright (c) 2015, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
description "QRL Post-update"
start on static-network-up
stop on runlevel [!2345]
console output
task
script
    QRL_PKG_FILE=/var/lib/dpkg/.qrl_installed_packages
    QRL_PKG_SUBDIR=qrlPackages
    MOUNT=/bin/mount
    MKDIR=/bin/mkdir
    QRL_PKG_DEVICE=/dev/mmcblk0p12
    QRL_PKG_MNT_PT=/mnt/system
    QRL_UPDATE_DEVICE=/dev/mmcblk0p17
    QRL_UPDATE_MNT_PT=/mnt/update
    LAST_INSTALL=${QRL_UPDATE_MNT_PT}/recovery/last_install
    BLUE_LED_BLINK=/sys/class/leds/blue/blink
    GREEN_LED_BLINK=/sys/class/leds/green/blink

    mount_partition () {
        dev=$1
        mnt=$2

        if [ ! -d $mnt ]; then
            mkdir -p $mnt
        fi

        mount -t ext4 $dev $mnt
    }

    finalize () {
        umount ${QRL_PKG_MNT_PT}
        umount ${QRL_UPDATE_MNT_PT}
        sync
    }

    # Check if the update partition exists
    name=`awk -F'=' '/PARTNAME/ {print $2}' /sys/class/block/mmcblk0p17/uevent`
    if [ "$name" != "update" ]; then
        exit 0
    fi

    # Mount partitions
    mount_partition ${QRL_PKG_DEVICE} ${QRL_PKG_MNT_PT}
    mount_partition ${QRL_UPDATE_DEVICE} ${QRL_UPDATE_MNT_PT}

    # Create package list if it doesn't exist
    if [ ! -e ${QRL_PKG_FILE} ]; then
        echo `ls ${QRL_PKG_MNT_PT}/qrlPackages | cut -d '_' -f 1` | tr " " "\n" > ${QRL_PKG_FILE}
    fi

    # Check if an update happened
    need_update="0"
    if [ -e ${LAST_INSTALL} ]; then
        need_update=`tail -1 ${LAST_INSTALL}`
    fi
    if [ ! "${need_update}" = "1" ]; then
        finalize
        exit 0
    fi

    # Check if it was a factory reset
    is_factory=""
    if [ -e ${LAST_INSTALL} ]; then
        is_factory=`grep factory ${LAST_INSTALL} || :`
    fi
    if [ ! "${is_factory}" = "" ]; then
        # Delete all .empty files
        find / -iname .empty | xargs rm
        rm ${LAST_INSTALL}
        finalize
        exit 0
    fi

    # Need to update the system
    echo "[INFO] Executing post-update procedure.." | wall -n
    echo 0 > ${BLUE_LED_BLINK}
    echo 1 > ${GREEN_LED_BLINK}

    # Remove the deleted packages
    new_pkg_list=`ls ${QRL_PKG_MNT_PT}/qrlPackages | cut -d '_' -f 1 | tr " " "\n"`
    removed_pkg=""
    for f in `cat ${QRL_PKG_FILE}`; do
        if [ "`echo $new_pkg_list | grep $f`" = "" ]; then
            removed_pkg="$f $removed_pkg"
        fi
    done

    if [ ! "$removed_pkg" = "" ]; then
        echo "[INFO] Deleting packages $removed_pkg.."
        set -x
        apt-get remove -y $removed_pkg 2>&1 || true
        set +x
    fi

    # Install new packages
    echo "[INFO] Installing new packages.." | wall -n
    set -x
    dpkg --install --recursive ${QRL_PKG_MNT_PT}/qrlPackages 2>&1 || true
    set +x

    # Clear the last_install file
    rm ${LAST_INSTALL}

    # Save new package list
    echo ${new_pkg_list} | tr " " "\n" > ${QRL_PKG_FILE}

    echo "[INFO] Install packages done. Rebooting.." | wall -n
    finalize
    reboot
end script
